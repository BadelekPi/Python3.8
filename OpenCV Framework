#import and open an image

import cv2
print("Package Imported")

img = cv2.imread("Resources/Lena.png")

cv2.imshow("Output", img)
cv2.waitKey(0)

#import and open video (ending if q is pressed)

import cv2

cap = cv2.VideoCapture("Resources/video.mp4")

while True:
    success, img = cap.read()
    cv2.imshow("Video", img)
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break
        
#open a video from webcam

import cv2

cap = cv2.VideoCapture(0)
#width size
cap.set(3,640)
#hight size
cap.set(4,480)
#changing the brightness
cap.set(10,100)
while True:
    success, img = cap.read()
    cv2.imshow("Video", img)
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break
        
        


#mixing photos and videos

import cv2
import numpy as np
img = cv2.imread("Resources/Jula.jpg")
#increase gray color of the picture
imgGray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)
#increase blur
imgBlur = cv2.GaussianBlur(imgGray,(7,7),0)
imgCanny = cv2.Canny(img, 30, 50)
kernel = np.ones((5,5),np.uint8)
imgDialation = cv2.dilate(imgCanny,kernel,iterations=1)
imgEroded = cv2.erode(imgDialation,kernel,iterations=1)

cv2.imshow("Gray Image", imgGray)
cv2.imshow("Blur Image", imgBlur)
cv2.imshow("Canny image", imgCanny)
cv2.imshow("Dialation Image", imgDialation)
cv2.imshow("Dialation Image", imgEroded)
cv2.waitKey(0)



#resize images and corners

import cv2
import numpy as np

img = cv2.imread("Resources/Jula.jpg")
#show height, width and number of channel RGB
print(img.shape)
#resize the image
imgResize = cv2.resize(img, (300,200))
imgCropped = img[0:200,200:500]
cv2.imshow("Image",img)
cv2.imshow("Image Resize",imgResize)
cv2.imshow("Image Cropped",imgCropped)
cv2.waitKey(0)



#drawing objects and writing on image

import cv2
import numpy as np

#zeros means black, size of our matrix
img = np.zeros((512,512,3),np.uint8)
print(img)
#limits the range height, width
img[200:300,100:300] = 255,0,0
#line through all image area
cv2.line(img,(0,0),(img.shape[1],img.shape[0]),(0,500,0),3)
#making rectangle
cv2.rectangle(img,(0,0),(250,350),(0,0,255),2) #or cv2.FILLED to fill the rectangle
#drawing rectangle
cv2.circle(img,(400,50),30,(255,255,0),5)
#define text and fonts, scale, color and thickness
cv2.putText(img," OPENCV ",(300,200),cv2.FONT_HERSHEY_COMPLEX,1,(0,150,0),1)
print(img.shape)
cv2.imshow("Image",img)

cv2.waitKey(0)


#płaska perspektywa bazująca na kilku punktach

import cv2
import numpy as np
#making warp perspective (płaska)
img = cv2.imread("Resources/Jula.jpg")
#tick 3 points
pts1 = np.float32([[111,219],[287,188],[154,482],[352,440]])
width, height = 250,350
pts2 = np.float32([[0,0],[width,0],[0,height],[width,height]])
matrix = cv2.getPerspectiveTransform(pts1,pts2)

imgOutput = cv2.warpPerspective(img,matrix,(width,height))


cv2.imshow("Image",img)
cv2.imshow("Image Output",imgOutput)
cv2.waitKey(0)





#joining images together

img = cv2.imread('Resources/Jula.jpg')

#horizontal view
hor = np.hstack((img,img))
cv2.imshow("Horizontal",hor)

#vertical view
ver = np.vstack((img,img))
cv2.imshow("Vertical",ver)

cv2.waitKey(0)
