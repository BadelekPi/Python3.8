{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import os\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "all_months_data = pd.DataFrame()\n",
    "files = [file for file in os.listdir('./Sales_Data')]\n",
    "for file in files:\n",
    "    df = pd.read_csv(\"./Sales_Data/\"+file)\n",
    "    all_months_data = pd.concat([all_months_data, df])\n",
    "    \n",
    "all_months_data.to_csv(\"all_data.csv\", index = False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Order ID</th>\n",
       "      <th>Product</th>\n",
       "      <th>Quantity Ordered</th>\n",
       "      <th>Price Each</th>\n",
       "      <th>Order Date</th>\n",
       "      <th>Purchase Address</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>176558</td>\n",
       "      <td>USB-C Charging Cable</td>\n",
       "      <td>2</td>\n",
       "      <td>11.95</td>\n",
       "      <td>04/19/19 08:46</td>\n",
       "      <td>917 1st St, Dallas, TX 75001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>176559</td>\n",
       "      <td>Bose SoundSport Headphones</td>\n",
       "      <td>1</td>\n",
       "      <td>99.99</td>\n",
       "      <td>04/07/19 22:30</td>\n",
       "      <td>682 Chestnut St, Boston, MA 02215</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>176560</td>\n",
       "      <td>Google Phone</td>\n",
       "      <td>1</td>\n",
       "      <td>600</td>\n",
       "      <td>04/12/19 14:38</td>\n",
       "      <td>669 Spruce St, Los Angeles, CA 90001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>176560</td>\n",
       "      <td>Wired Headphones</td>\n",
       "      <td>1</td>\n",
       "      <td>11.99</td>\n",
       "      <td>04/12/19 14:38</td>\n",
       "      <td>669 Spruce St, Los Angeles, CA 90001</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Order ID                     Product Quantity Ordered Price Each  \\\n",
       "0   176558        USB-C Charging Cable                2      11.95   \n",
       "1      NaN                         NaN              NaN        NaN   \n",
       "2   176559  Bose SoundSport Headphones                1      99.99   \n",
       "3   176560                Google Phone                1        600   \n",
       "4   176560            Wired Headphones                1      11.99   \n",
       "\n",
       "       Order Date                      Purchase Address  \n",
       "0  04/19/19 08:46          917 1st St, Dallas, TX 75001  \n",
       "1             NaN                                   NaN  \n",
       "2  04/07/19 22:30     682 Chestnut St, Boston, MA 02215  \n",
       "3  04/12/19 14:38  669 Spruce St, Los Angeles, CA 90001  \n",
       "4  04/12/19 14:38  669 Spruce St, Los Angeles, CA 90001  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "all_data = pd.read_csv(\"all_data.csv\")\n",
    "all_data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Clean up the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Order ID</th>\n",
       "      <th>Product</th>\n",
       "      <th>Quantity Ordered</th>\n",
       "      <th>Price Each</th>\n",
       "      <th>Order Date</th>\n",
       "      <th>Purchase Address</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>176558</td>\n",
       "      <td>USB-C Charging Cable</td>\n",
       "      <td>2</td>\n",
       "      <td>11.95</td>\n",
       "      <td>04/19/19 08:46</td>\n",
       "      <td>917 1st St, Dallas, TX 75001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>176559</td>\n",
       "      <td>Bose SoundSport Headphones</td>\n",
       "      <td>1</td>\n",
       "      <td>99.99</td>\n",
       "      <td>04/07/19 22:30</td>\n",
       "      <td>682 Chestnut St, Boston, MA 02215</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>176560</td>\n",
       "      <td>Google Phone</td>\n",
       "      <td>1</td>\n",
       "      <td>600</td>\n",
       "      <td>04/12/19 14:38</td>\n",
       "      <td>669 Spruce St, Los Angeles, CA 90001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>176560</td>\n",
       "      <td>Wired Headphones</td>\n",
       "      <td>1</td>\n",
       "      <td>11.99</td>\n",
       "      <td>04/12/19 14:38</td>\n",
       "      <td>669 Spruce St, Los Angeles, CA 90001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>176561</td>\n",
       "      <td>Wired Headphones</td>\n",
       "      <td>1</td>\n",
       "      <td>11.99</td>\n",
       "      <td>04/30/19 09:27</td>\n",
       "      <td>333 8th St, Los Angeles, CA 90001</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Order ID                     Product Quantity Ordered Price Each  \\\n",
       "0   176558        USB-C Charging Cable                2      11.95   \n",
       "2   176559  Bose SoundSport Headphones                1      99.99   \n",
       "3   176560                Google Phone                1        600   \n",
       "4   176560            Wired Headphones                1      11.99   \n",
       "5   176561            Wired Headphones                1      11.99   \n",
       "\n",
       "       Order Date                      Purchase Address  \n",
       "0  04/19/19 08:46          917 1st St, Dallas, TX 75001  \n",
       "2  04/07/19 22:30     682 Chestnut St, Boston, MA 02215  \n",
       "3  04/12/19 14:38  669 Spruce St, Los Angeles, CA 90001  \n",
       "4  04/12/19 14:38  669 Spruce St, Los Angeles, CA 90001  \n",
       "5  04/30/19 09:27     333 8th St, Los Angeles, CA 90001  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nan_df = all_data[all_data.isna().any(axis=1)]\n",
    "nan_df.head()\n",
    "\n",
    "all_data = all_data.dropna(how = 'all')\n",
    "all_data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### find or delete it"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "all_data = all_data[all_data['Order Date'].str[0:2]!='Or']\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### convert columns to the correct type"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Order ID</th>\n",
       "      <th>Product</th>\n",
       "      <th>Quantity Ordered</th>\n",
       "      <th>Price Each</th>\n",
       "      <th>Order Date</th>\n",
       "      <th>Purchase Address</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>176558</td>\n",
       "      <td>USB-C Charging Cable</td>\n",
       "      <td>2</td>\n",
       "      <td>11.95</td>\n",
       "      <td>04/19/19 08:46</td>\n",
       "      <td>917 1st St, Dallas, TX 75001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>176559</td>\n",
       "      <td>Bose SoundSport Headphones</td>\n",
       "      <td>1</td>\n",
       "      <td>99.99</td>\n",
       "      <td>04/07/19 22:30</td>\n",
       "      <td>682 Chestnut St, Boston, MA 02215</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>176560</td>\n",
       "      <td>Google Phone</td>\n",
       "      <td>1</td>\n",
       "      <td>600.00</td>\n",
       "      <td>04/12/19 14:38</td>\n",
       "      <td>669 Spruce St, Los Angeles, CA 90001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>176560</td>\n",
       "      <td>Wired Headphones</td>\n",
       "      <td>1</td>\n",
       "      <td>11.99</td>\n",
       "      <td>04/12/19 14:38</td>\n",
       "      <td>669 Spruce St, Los Angeles, CA 90001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>176561</td>\n",
       "      <td>Wired Headphones</td>\n",
       "      <td>1</td>\n",
       "      <td>11.99</td>\n",
       "      <td>04/30/19 09:27</td>\n",
       "      <td>333 8th St, Los Angeles, CA 90001</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Order ID                     Product  Quantity Ordered  Price Each  \\\n",
       "0   176558        USB-C Charging Cable                 2       11.95   \n",
       "2   176559  Bose SoundSport Headphones                 1       99.99   \n",
       "3   176560                Google Phone                 1      600.00   \n",
       "4   176560            Wired Headphones                 1       11.99   \n",
       "5   176561            Wired Headphones                 1       11.99   \n",
       "\n",
       "       Order Date                      Purchase Address  \n",
       "0  04/19/19 08:46          917 1st St, Dallas, TX 75001  \n",
       "2  04/07/19 22:30     682 Chestnut St, Boston, MA 02215  \n",
       "3  04/12/19 14:38  669 Spruce St, Los Angeles, CA 90001  \n",
       "4  04/12/19 14:38  669 Spruce St, Los Angeles, CA 90001  \n",
       "5  04/30/19 09:27     333 8th St, Los Angeles, CA 90001  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "all_data['Quantity Ordered'] = pd.to_numeric(all_data['Quantity Ordered'])\n",
    "all_data['Price Each'] = pd.to_numeric(all_data['Price Each'])\n",
    "all_data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Augment data with additional columns\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Task 2: Add month Column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Order ID</th>\n",
       "      <th>Product</th>\n",
       "      <th>Quantity Ordered</th>\n",
       "      <th>Price Each</th>\n",
       "      <th>Order Date</th>\n",
       "      <th>Purchase Address</th>\n",
       "      <th>Month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>176558</td>\n",
       "      <td>USB-C Charging Cable</td>\n",
       "      <td>2</td>\n",
       "      <td>11.95</td>\n",
       "      <td>04/19/19 08:46</td>\n",
       "      <td>917 1st St, Dallas, TX 75001</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>176559</td>\n",
       "      <td>Bose SoundSport Headphones</td>\n",
       "      <td>1</td>\n",
       "      <td>99.99</td>\n",
       "      <td>04/07/19 22:30</td>\n",
       "      <td>682 Chestnut St, Boston, MA 02215</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>176560</td>\n",
       "      <td>Google Phone</td>\n",
       "      <td>1</td>\n",
       "      <td>600.00</td>\n",
       "      <td>04/12/19 14:38</td>\n",
       "      <td>669 Spruce St, Los Angeles, CA 90001</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>176560</td>\n",
       "      <td>Wired Headphones</td>\n",
       "      <td>1</td>\n",
       "      <td>11.99</td>\n",
       "      <td>04/12/19 14:38</td>\n",
       "      <td>669 Spruce St, Los Angeles, CA 90001</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>176561</td>\n",
       "      <td>Wired Headphones</td>\n",
       "      <td>1</td>\n",
       "      <td>11.99</td>\n",
       "      <td>04/30/19 09:27</td>\n",
       "      <td>333 8th St, Los Angeles, CA 90001</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Order ID                     Product  Quantity Ordered  Price Each  \\\n",
       "0   176558        USB-C Charging Cable                 2       11.95   \n",
       "2   176559  Bose SoundSport Headphones                 1       99.99   \n",
       "3   176560                Google Phone                 1      600.00   \n",
       "4   176560            Wired Headphones                 1       11.99   \n",
       "5   176561            Wired Headphones                 1       11.99   \n",
       "\n",
       "       Order Date                      Purchase Address  Month  \n",
       "0  04/19/19 08:46          917 1st St, Dallas, TX 75001      4  \n",
       "2  04/07/19 22:30     682 Chestnut St, Boston, MA 02215      4  \n",
       "3  04/12/19 14:38  669 Spruce St, Los Angeles, CA 90001      4  \n",
       "4  04/12/19 14:38  669 Spruce St, Los Angeles, CA 90001      4  \n",
       "5  04/30/19 09:27     333 8th St, Los Angeles, CA 90001      4  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "all_data['Month'] = all_data['Order Date'].str[0:2]\n",
    "all_data['Month'] = all_data['Month'].astype('int32')\n",
    "all_data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### add a sales column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Order ID</th>\n",
       "      <th>Product</th>\n",
       "      <th>Quantity Ordered</th>\n",
       "      <th>Price Each</th>\n",
       "      <th>Order Date</th>\n",
       "      <th>Purchase Address</th>\n",
       "      <th>Month</th>\n",
       "      <th>Sales</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>176558</td>\n",
       "      <td>USB-C Charging Cable</td>\n",
       "      <td>2</td>\n",
       "      <td>11.95</td>\n",
       "      <td>04/19/19 08:46</td>\n",
       "      <td>917 1st St, Dallas, TX 75001</td>\n",
       "      <td>4</td>\n",
       "      <td>23.90</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>176559</td>\n",
       "      <td>Bose SoundSport Headphones</td>\n",
       "      <td>1</td>\n",
       "      <td>99.99</td>\n",
       "      <td>04/07/19 22:30</td>\n",
       "      <td>682 Chestnut St, Boston, MA 02215</td>\n",
       "      <td>4</td>\n",
       "      <td>99.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>176560</td>\n",
       "      <td>Google Phone</td>\n",
       "      <td>1</td>\n",
       "      <td>600.00</td>\n",
       "      <td>04/12/19 14:38</td>\n",
       "      <td>669 Spruce St, Los Angeles, CA 90001</td>\n",
       "      <td>4</td>\n",
       "      <td>600.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>176560</td>\n",
       "      <td>Wired Headphones</td>\n",
       "      <td>1</td>\n",
       "      <td>11.99</td>\n",
       "      <td>04/12/19 14:38</td>\n",
       "      <td>669 Spruce St, Los Angeles, CA 90001</td>\n",
       "      <td>4</td>\n",
       "      <td>11.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>176561</td>\n",
       "      <td>Wired Headphones</td>\n",
       "      <td>1</td>\n",
       "      <td>11.99</td>\n",
       "      <td>04/30/19 09:27</td>\n",
       "      <td>333 8th St, Los Angeles, CA 90001</td>\n",
       "      <td>4</td>\n",
       "      <td>11.99</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Order ID                     Product  Quantity Ordered  Price Each  \\\n",
       "0   176558        USB-C Charging Cable                 2       11.95   \n",
       "2   176559  Bose SoundSport Headphones                 1       99.99   \n",
       "3   176560                Google Phone                 1      600.00   \n",
       "4   176560            Wired Headphones                 1       11.99   \n",
       "5   176561            Wired Headphones                 1       11.99   \n",
       "\n",
       "       Order Date                      Purchase Address  Month   Sales  \n",
       "0  04/19/19 08:46          917 1st St, Dallas, TX 75001      4   23.90  \n",
       "2  04/07/19 22:30     682 Chestnut St, Boston, MA 02215      4   99.99  \n",
       "3  04/12/19 14:38  669 Spruce St, Los Angeles, CA 90001      4  600.00  \n",
       "4  04/12/19 14:38  669 Spruce St, Los Angeles, CA 90001      4   11.99  \n",
       "5  04/30/19 09:27     333 8th St, Los Angeles, CA 90001      4   11.99  "
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "all_data['Sales'] = all_data['Quantity Ordered'] * all_data['Price Each']\n",
    "all_data.head()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### add a city column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Order ID</th>\n",
       "      <th>Product</th>\n",
       "      <th>Quantity Ordered</th>\n",
       "      <th>Price Each</th>\n",
       "      <th>Order Date</th>\n",
       "      <th>Purchase Address</th>\n",
       "      <th>Month</th>\n",
       "      <th>Sales</th>\n",
       "      <th>City</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>176558</td>\n",
       "      <td>USB-C Charging Cable</td>\n",
       "      <td>2</td>\n",
       "      <td>11.95</td>\n",
       "      <td>04/19/19 08:46</td>\n",
       "      <td>917 1st St, Dallas, TX 75001</td>\n",
       "      <td>4</td>\n",
       "      <td>23.90</td>\n",
       "      <td>Dallas (TX)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>176559</td>\n",
       "      <td>Bose SoundSport Headphones</td>\n",
       "      <td>1</td>\n",
       "      <td>99.99</td>\n",
       "      <td>04/07/19 22:30</td>\n",
       "      <td>682 Chestnut St, Boston, MA 02215</td>\n",
       "      <td>4</td>\n",
       "      <td>99.99</td>\n",
       "      <td>Boston (MA)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>176560</td>\n",
       "      <td>Google Phone</td>\n",
       "      <td>1</td>\n",
       "      <td>600.00</td>\n",
       "      <td>04/12/19 14:38</td>\n",
       "      <td>669 Spruce St, Los Angeles, CA 90001</td>\n",
       "      <td>4</td>\n",
       "      <td>600.00</td>\n",
       "      <td>Los Angeles (CA)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>176560</td>\n",
       "      <td>Wired Headphones</td>\n",
       "      <td>1</td>\n",
       "      <td>11.99</td>\n",
       "      <td>04/12/19 14:38</td>\n",
       "      <td>669 Spruce St, Los Angeles, CA 90001</td>\n",
       "      <td>4</td>\n",
       "      <td>11.99</td>\n",
       "      <td>Los Angeles (CA)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>176561</td>\n",
       "      <td>Wired Headphones</td>\n",
       "      <td>1</td>\n",
       "      <td>11.99</td>\n",
       "      <td>04/30/19 09:27</td>\n",
       "      <td>333 8th St, Los Angeles, CA 90001</td>\n",
       "      <td>4</td>\n",
       "      <td>11.99</td>\n",
       "      <td>Los Angeles (CA)</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Order ID                     Product  Quantity Ordered  Price Each  \\\n",
       "0   176558        USB-C Charging Cable                 2       11.95   \n",
       "2   176559  Bose SoundSport Headphones                 1       99.99   \n",
       "3   176560                Google Phone                 1      600.00   \n",
       "4   176560            Wired Headphones                 1       11.99   \n",
       "5   176561            Wired Headphones                 1       11.99   \n",
       "\n",
       "       Order Date                      Purchase Address  Month   Sales  \\\n",
       "0  04/19/19 08:46          917 1st St, Dallas, TX 75001      4   23.90   \n",
       "2  04/07/19 22:30     682 Chestnut St, Boston, MA 02215      4   99.99   \n",
       "3  04/12/19 14:38  669 Spruce St, Los Angeles, CA 90001      4  600.00   \n",
       "4  04/12/19 14:38  669 Spruce St, Los Angeles, CA 90001      4   11.99   \n",
       "5  04/30/19 09:27     333 8th St, Los Angeles, CA 90001      4   11.99   \n",
       "\n",
       "                City  \n",
       "0        Dallas (TX)  \n",
       "2        Boston (MA)  \n",
       "3   Los Angeles (CA)  \n",
       "4   Los Angeles (CA)  \n",
       "5   Los Angeles (CA)  "
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "\n",
    "def get_state(address):\n",
    "    return address.split(',')[2].split(' ')[1]\n",
    "\n",
    "all_data['City'] = all_data['Purchase Address'].apply(lambda x: x.split(',')[1] + ' ('+ get_state(x) + ')')\n",
    "all_data.head()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### What was the best best month for sales?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "results = all_data.groupby('Month').sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'Month number')"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "months = range(1,13)\n",
    "plt.bar(months, results['Sales'])\n",
    "plt.xticks(months)\n",
    "plt.ylabel('Sales in USD ($)')\n",
    "plt.xlabel('Month number')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Quantity Ordered</th>\n",
       "      <th>Price Each</th>\n",
       "      <th>Month</th>\n",
       "      <th>Sales</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>City</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Atlanta (GA)</th>\n",
       "      <td>16602</td>\n",
       "      <td>2.779908e+06</td>\n",
       "      <td>104794</td>\n",
       "      <td>2.795499e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Austin (TX)</th>\n",
       "      <td>11153</td>\n",
       "      <td>1.809874e+06</td>\n",
       "      <td>69829</td>\n",
       "      <td>1.819582e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Boston (MA)</th>\n",
       "      <td>22528</td>\n",
       "      <td>3.637410e+06</td>\n",
       "      <td>141112</td>\n",
       "      <td>3.661642e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Dallas (TX)</th>\n",
       "      <td>16730</td>\n",
       "      <td>2.752628e+06</td>\n",
       "      <td>104620</td>\n",
       "      <td>2.767975e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Los Angeles (CA)</th>\n",
       "      <td>33289</td>\n",
       "      <td>5.421435e+06</td>\n",
       "      <td>208325</td>\n",
       "      <td>5.452571e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>New York City (NY)</th>\n",
       "      <td>27932</td>\n",
       "      <td>4.635371e+06</td>\n",
       "      <td>175741</td>\n",
       "      <td>4.664317e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Portland (ME)</th>\n",
       "      <td>2750</td>\n",
       "      <td>4.471893e+05</td>\n",
       "      <td>17144</td>\n",
       "      <td>4.497583e+05</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Portland (OR)</th>\n",
       "      <td>11303</td>\n",
       "      <td>1.860558e+06</td>\n",
       "      <td>70621</td>\n",
       "      <td>1.870732e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>San Francisco (CA)</th>\n",
       "      <td>50239</td>\n",
       "      <td>8.211462e+06</td>\n",
       "      <td>315520</td>\n",
       "      <td>8.262204e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Seattle (WA)</th>\n",
       "      <td>16553</td>\n",
       "      <td>2.733296e+06</td>\n",
       "      <td>104941</td>\n",
       "      <td>2.747755e+06</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     Quantity Ordered    Price Each   Month         Sales\n",
       "City                                                                     \n",
       " Atlanta (GA)                   16602  2.779908e+06  104794  2.795499e+06\n",
       " Austin (TX)                    11153  1.809874e+06   69829  1.819582e+06\n",
       " Boston (MA)                    22528  3.637410e+06  141112  3.661642e+06\n",
       " Dallas (TX)                    16730  2.752628e+06  104620  2.767975e+06\n",
       " Los Angeles (CA)               33289  5.421435e+06  208325  5.452571e+06\n",
       " New York City (NY)             27932  4.635371e+06  175741  4.664317e+06\n",
       " Portland (ME)                   2750  4.471893e+05   17144  4.497583e+05\n",
       " Portland (OR)                  11303  1.860558e+06   70621  1.870732e+06\n",
       " San Francisco (CA)             50239  8.211462e+06  315520  8.262204e+06\n",
       " Seattle (WA)                   16553  2.733296e+06  104941  2.747755e+06"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "results = all_data.groupby('City').sum()\n",
    "results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'City name')"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "cities = [city for city, df in all_data.groupby('City')]\n",
    "plt.bar(cities, results['Sales'])\n",
    "plt.xticks(cities, rotation = 'vertical', size=8)\n",
    "plt.ylabel('Sales in USD ($)')\n",
    "plt.xlabel('City name')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Order ID</th>\n",
       "      <th>Product</th>\n",
       "      <th>Quantity Ordered</th>\n",
       "      <th>Price Each</th>\n",
       "      <th>Order Date</th>\n",
       "      <th>Purchase Address</th>\n",
       "      <th>Month</th>\n",
       "      <th>Sales</th>\n",
       "      <th>City</th>\n",
       "      <th>Hour</th>\n",
       "      <th>Minute</th>\n",
       "      <th>Count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>176558</td>\n",
       "      <td>USB-C Charging Cable</td>\n",
       "      <td>2</td>\n",
       "      <td>11.95</td>\n",
       "      <td>04/19/19 08:46</td>\n",
       "      <td>917 1st St, Dallas, TX 75001</td>\n",
       "      <td>4</td>\n",
       "      <td>23.90</td>\n",
       "      <td>Dallas (TX)</td>\n",
       "      <td>8</td>\n",
       "      <td>46</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>176559</td>\n",
       "      <td>Bose SoundSport Headphones</td>\n",
       "      <td>1</td>\n",
       "      <td>99.99</td>\n",
       "      <td>04/07/19 22:30</td>\n",
       "      <td>682 Chestnut St, Boston, MA 02215</td>\n",
       "      <td>4</td>\n",
       "      <td>99.99</td>\n",
       "      <td>Boston (MA)</td>\n",
       "      <td>22</td>\n",
       "      <td>30</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>176560</td>\n",
       "      <td>Google Phone</td>\n",
       "      <td>1</td>\n",
       "      <td>600.00</td>\n",
       "      <td>04/12/19 14:38</td>\n",
       "      <td>669 Spruce St, Los Angeles, CA 90001</td>\n",
       "      <td>4</td>\n",
       "      <td>600.00</td>\n",
       "      <td>Los Angeles (CA)</td>\n",
       "      <td>14</td>\n",
       "      <td>38</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>176560</td>\n",
       "      <td>Wired Headphones</td>\n",
       "      <td>1</td>\n",
       "      <td>11.99</td>\n",
       "      <td>04/12/19 14:38</td>\n",
       "      <td>669 Spruce St, Los Angeles, CA 90001</td>\n",
       "      <td>4</td>\n",
       "      <td>11.99</td>\n",
       "      <td>Los Angeles (CA)</td>\n",
       "      <td>14</td>\n",
       "      <td>38</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>176561</td>\n",
       "      <td>Wired Headphones</td>\n",
       "      <td>1</td>\n",
       "      <td>11.99</td>\n",
       "      <td>04/30/19 09:27</td>\n",
       "      <td>333 8th St, Los Angeles, CA 90001</td>\n",
       "      <td>4</td>\n",
       "      <td>11.99</td>\n",
       "      <td>Los Angeles (CA)</td>\n",
       "      <td>9</td>\n",
       "      <td>27</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Order ID                     Product  Quantity Ordered  Price Each  \\\n",
       "0   176558        USB-C Charging Cable                 2       11.95   \n",
       "2   176559  Bose SoundSport Headphones                 1       99.99   \n",
       "3   176560                Google Phone                 1      600.00   \n",
       "4   176560            Wired Headphones                 1       11.99   \n",
       "5   176561            Wired Headphones                 1       11.99   \n",
       "\n",
       "       Order Date                      Purchase Address  Month   Sales  \\\n",
       "0  04/19/19 08:46          917 1st St, Dallas, TX 75001      4   23.90   \n",
       "2  04/07/19 22:30     682 Chestnut St, Boston, MA 02215      4   99.99   \n",
       "3  04/12/19 14:38  669 Spruce St, Los Angeles, CA 90001      4  600.00   \n",
       "4  04/12/19 14:38  669 Spruce St, Los Angeles, CA 90001      4   11.99   \n",
       "5  04/30/19 09:27     333 8th St, Los Angeles, CA 90001      4   11.99   \n",
       "\n",
       "                City  Hour  Minute  Count  \n",
       "0        Dallas (TX)     8      46      1  \n",
       "2        Boston (MA)    22      30      1  \n",
       "3   Los Angeles (CA)    14      38      1  \n",
       "4   Los Angeles (CA)    14      38      1  \n",
       "5   Los Angeles (CA)     9      27      1  "
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "all_data['Hour'] = pd.to_datetime(all_data['Order Date']).dt.hour\n",
    "all_data['Minute'] = pd.to_datetime(all_data['Order Date']).dt.minute\n",
    "all_data['Count'] = 1\n",
    "all_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "hours =[hour for hour, df in all_data.groupby('Hour')]\n",
    "plt.plot(hours, all_data.groupby(['Hour']).count())\n",
    "plt.xticks(hours)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "keys = [pair for pair, df in all_data.groupby(['Hour'])]\n",
    "\n",
    "plt.plot(keys, all_data.groupby(['Hour']).count()['Count'])\n",
    "plt.xticks(keys)\n",
    "plt.grid()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### What products are most often sold together?\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Order ID</th>\n",
       "      <th>Product</th>\n",
       "      <th>Quantity Ordered</th>\n",
       "      <th>Price Each</th>\n",
       "      <th>Order Date</th>\n",
       "      <th>Purchase Address</th>\n",
       "      <th>Month</th>\n",
       "      <th>Sales</th>\n",
       "      <th>City</th>\n",
       "      <th>Hour</th>\n",
       "      <th>Minute</th>\n",
       "      <th>Count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>176558</td>\n",
       "      <td>USB-C Charging Cable</td>\n",
       "      <td>2</td>\n",
       "      <td>11.95</td>\n",
       "      <td>04/19/19 08:46</td>\n",
       "      <td>917 1st St, Dallas, TX 75001</td>\n",
       "      <td>4</td>\n",
       "      <td>23.90</td>\n",
       "      <td>Dallas (TX)</td>\n",
       "      <td>8</td>\n",
       "      <td>46</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>176559</td>\n",
       "      <td>Bose SoundSport Headphones</td>\n",
       "      <td>1</td>\n",
       "      <td>99.99</td>\n",
       "      <td>04/07/19 22:30</td>\n",
       "      <td>682 Chestnut St, Boston, MA 02215</td>\n",
       "      <td>4</td>\n",
       "      <td>99.99</td>\n",
       "      <td>Boston (MA)</td>\n",
       "      <td>22</td>\n",
       "      <td>30</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>176560</td>\n",
       "      <td>Google Phone</td>\n",
       "      <td>1</td>\n",
       "      <td>600.00</td>\n",
       "      <td>04/12/19 14:38</td>\n",
       "      <td>669 Spruce St, Los Angeles, CA 90001</td>\n",
       "      <td>4</td>\n",
       "      <td>600.00</td>\n",
       "      <td>Los Angeles (CA)</td>\n",
       "      <td>14</td>\n",
       "      <td>38</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>176560</td>\n",
       "      <td>Wired Headphones</td>\n",
       "      <td>1</td>\n",
       "      <td>11.99</td>\n",
       "      <td>04/12/19 14:38</td>\n",
       "      <td>669 Spruce St, Los Angeles, CA 90001</td>\n",
       "      <td>4</td>\n",
       "      <td>11.99</td>\n",
       "      <td>Los Angeles (CA)</td>\n",
       "      <td>14</td>\n",
       "      <td>38</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>176561</td>\n",
       "      <td>Wired Headphones</td>\n",
       "      <td>1</td>\n",
       "      <td>11.99</td>\n",
       "      <td>04/30/19 09:27</td>\n",
       "      <td>333 8th St, Los Angeles, CA 90001</td>\n",
       "      <td>4</td>\n",
       "      <td>11.99</td>\n",
       "      <td>Los Angeles (CA)</td>\n",
       "      <td>9</td>\n",
       "      <td>27</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Order ID                     Product  Quantity Ordered  Price Each  \\\n",
       "0   176558        USB-C Charging Cable                 2       11.95   \n",
       "2   176559  Bose SoundSport Headphones                 1       99.99   \n",
       "3   176560                Google Phone                 1      600.00   \n",
       "4   176560            Wired Headphones                 1       11.99   \n",
       "5   176561            Wired Headphones                 1       11.99   \n",
       "\n",
       "       Order Date                      Purchase Address  Month   Sales  \\\n",
       "0  04/19/19 08:46          917 1st St, Dallas, TX 75001      4   23.90   \n",
       "2  04/07/19 22:30     682 Chestnut St, Boston, MA 02215      4   99.99   \n",
       "3  04/12/19 14:38  669 Spruce St, Los Angeles, CA 90001      4  600.00   \n",
       "4  04/12/19 14:38  669 Spruce St, Los Angeles, CA 90001      4   11.99   \n",
       "5  04/30/19 09:27     333 8th St, Los Angeles, CA 90001      4   11.99   \n",
       "\n",
       "                City  Hour  Minute  Count  \n",
       "0        Dallas (TX)     8      46      1  \n",
       "2        Boston (MA)    22      30      1  \n",
       "3   Los Angeles (CA)    14      38      1  \n",
       "4   Los Angeles (CA)    14      38      1  \n",
       "5   Los Angeles (CA)     9      27      1  "
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "all_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-27-ecaa541aa6ca>:3: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  df['Grouped'] = df.groupby('Order ID')['Product'].transform(lambda x: ','.join(x))\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Order ID</th>\n",
       "      <th>Grouped</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>176560</td>\n",
       "      <td>Google Phone,Wired Headphones</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>176574</td>\n",
       "      <td>Google Phone,USB-C Charging Cable</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>176585</td>\n",
       "      <td>Bose SoundSport Headphones,Bose SoundSport Hea...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>176586</td>\n",
       "      <td>AAA Batteries (4-pack),Google Phone</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>119</th>\n",
       "      <td>176672</td>\n",
       "      <td>Lightning Charging Cable,USB-C Charging Cable</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Order ID                                            Grouped\n",
       "3     176560                      Google Phone,Wired Headphones\n",
       "18    176574                  Google Phone,USB-C Charging Cable\n",
       "30    176585  Bose SoundSport Headphones,Bose SoundSport Hea...\n",
       "32    176586                AAA Batteries (4-pack),Google Phone\n",
       "119   176672      Lightning Charging Cable,USB-C Charging Cable"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = all_data[all_data['Order ID'].duplicated(keep = False)]\n",
    "\n",
    "df['Grouped'] = df.groupby('Order ID')['Product'].transform(lambda x: ','.join(x))\n",
    "df = df[['Order ID', 'Grouped']].drop_duplicates()\n",
    "df.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "('iPhone', 'Lightning Charging Cable') 1005\n",
      "('Google Phone', 'USB-C Charging Cable') 987\n",
      "('iPhone', 'Wired Headphones') 447\n",
      "('Google Phone', 'Wired Headphones') 414\n",
      "('Vareebadd Phone', 'USB-C Charging Cable') 361\n",
      "('iPhone', 'Apple Airpods Headphones') 360\n",
      "('Google Phone', 'Bose SoundSport Headphones') 220\n",
      "('USB-C Charging Cable', 'Wired Headphones') 160\n",
      "('Vareebadd Phone', 'Wired Headphones') 143\n",
      "('Lightning Charging Cable', 'Wired Headphones') 92\n"
     ]
    }
   ],
   "source": [
    "from itertools import combinations\n",
    "from collections import Counter\n",
    "\n",
    "count = Counter()\n",
    "\n",
    "for row in df['Grouped']:\n",
    "    row_list = row.split(',')\n",
    "    count.update(Counter(combinations(row_list, 2)))\n",
    "    \n",
    "for key, value in count.most_common(10):\n",
    "    print(key, value)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### what product sold the most? why do u think it sold the most?\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Quantity Ordered</th>\n",
       "      <th>Price Each</th>\n",
       "      <th>Month</th>\n",
       "      <th>Sales</th>\n",
       "      <th>Hour</th>\n",
       "      <th>Minute</th>\n",
       "      <th>Count</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Product</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>20in Monitor</th>\n",
       "      <td>4129</td>\n",
       "      <td>451068.99</td>\n",
       "      <td>29336</td>\n",
       "      <td>454148.71</td>\n",
       "      <td>58764</td>\n",
       "      <td>122252</td>\n",
       "      <td>4101</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27in 4K Gaming Monitor</th>\n",
       "      <td>6244</td>\n",
       "      <td>2429637.70</td>\n",
       "      <td>44440</td>\n",
       "      <td>2435097.56</td>\n",
       "      <td>90916</td>\n",
       "      <td>184331</td>\n",
       "      <td>6230</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27in FHD Monitor</th>\n",
       "      <td>7550</td>\n",
       "      <td>1125974.93</td>\n",
       "      <td>52558</td>\n",
       "      <td>1132424.50</td>\n",
       "      <td>107540</td>\n",
       "      <td>219948</td>\n",
       "      <td>7507</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34in Ultrawide Monitor</th>\n",
       "      <td>6199</td>\n",
       "      <td>2348718.19</td>\n",
       "      <td>43304</td>\n",
       "      <td>2355558.01</td>\n",
       "      <td>89076</td>\n",
       "      <td>183480</td>\n",
       "      <td>6181</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AA Batteries (4-pack)</th>\n",
       "      <td>27635</td>\n",
       "      <td>79015.68</td>\n",
       "      <td>145558</td>\n",
       "      <td>106118.40</td>\n",
       "      <td>298342</td>\n",
       "      <td>609039</td>\n",
       "      <td>20577</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>AAA Batteries (4-pack)</th>\n",
       "      <td>31017</td>\n",
       "      <td>61716.59</td>\n",
       "      <td>146370</td>\n",
       "      <td>92740.83</td>\n",
       "      <td>297332</td>\n",
       "      <td>612113</td>\n",
       "      <td>20641</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Apple Airpods Headphones</th>\n",
       "      <td>15661</td>\n",
       "      <td>2332350.00</td>\n",
       "      <td>109477</td>\n",
       "      <td>2349150.00</td>\n",
       "      <td>223304</td>\n",
       "      <td>455570</td>\n",
       "      <td>15549</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Bose SoundSport Headphones</th>\n",
       "      <td>13457</td>\n",
       "      <td>1332366.75</td>\n",
       "      <td>94113</td>\n",
       "      <td>1345565.43</td>\n",
       "      <td>192445</td>\n",
       "      <td>392603</td>\n",
       "      <td>13325</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Flatscreen TV</th>\n",
       "      <td>4819</td>\n",
       "      <td>1440000.00</td>\n",
       "      <td>34224</td>\n",
       "      <td>1445700.00</td>\n",
       "      <td>68815</td>\n",
       "      <td>142789</td>\n",
       "      <td>4800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Google Phone</th>\n",
       "      <td>5532</td>\n",
       "      <td>3315000.00</td>\n",
       "      <td>38305</td>\n",
       "      <td>3319200.00</td>\n",
       "      <td>79479</td>\n",
       "      <td>162773</td>\n",
       "      <td>5525</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>LG Dryer</th>\n",
       "      <td>646</td>\n",
       "      <td>387600.00</td>\n",
       "      <td>4383</td>\n",
       "      <td>387600.00</td>\n",
       "      <td>9326</td>\n",
       "      <td>19043</td>\n",
       "      <td>646</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>LG Washing Machine</th>\n",
       "      <td>666</td>\n",
       "      <td>399600.00</td>\n",
       "      <td>4523</td>\n",
       "      <td>399600.00</td>\n",
       "      <td>9785</td>\n",
       "      <td>19462</td>\n",
       "      <td>666</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Lightning Charging Cable</th>\n",
       "      <td>23217</td>\n",
       "      <td>323787.10</td>\n",
       "      <td>153092</td>\n",
       "      <td>347094.15</td>\n",
       "      <td>312529</td>\n",
       "      <td>634442</td>\n",
       "      <td>21658</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Macbook Pro Laptop</th>\n",
       "      <td>4728</td>\n",
       "      <td>8030800.00</td>\n",
       "      <td>33548</td>\n",
       "      <td>8037600.00</td>\n",
       "      <td>68261</td>\n",
       "      <td>137574</td>\n",
       "      <td>4724</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>ThinkPad Laptop</th>\n",
       "      <td>4130</td>\n",
       "      <td>4127958.72</td>\n",
       "      <td>28950</td>\n",
       "      <td>4129958.70</td>\n",
       "      <td>59746</td>\n",
       "      <td>121508</td>\n",
       "      <td>4128</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>USB-C Charging Cable</th>\n",
       "      <td>23975</td>\n",
       "      <td>261740.85</td>\n",
       "      <td>154819</td>\n",
       "      <td>286501.25</td>\n",
       "      <td>314645</td>\n",
       "      <td>647586</td>\n",
       "      <td>21903</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Vareebadd Phone</th>\n",
       "      <td>2068</td>\n",
       "      <td>826000.00</td>\n",
       "      <td>14309</td>\n",
       "      <td>827200.00</td>\n",
       "      <td>29472</td>\n",
       "      <td>61835</td>\n",
       "      <td>2065</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Wired Headphones</th>\n",
       "      <td>20557</td>\n",
       "      <td>226395.18</td>\n",
       "      <td>133397</td>\n",
       "      <td>246478.43</td>\n",
       "      <td>271720</td>\n",
       "      <td>554023</td>\n",
       "      <td>18882</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>iPhone</th>\n",
       "      <td>6849</td>\n",
       "      <td>4789400.00</td>\n",
       "      <td>47941</td>\n",
       "      <td>4794300.00</td>\n",
       "      <td>98657</td>\n",
       "      <td>201688</td>\n",
       "      <td>6842</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                            Quantity Ordered  Price Each   Month       Sales  \\\n",
       "Product                                                                        \n",
       "20in Monitor                            4129   451068.99   29336   454148.71   \n",
       "27in 4K Gaming Monitor                  6244  2429637.70   44440  2435097.56   \n",
       "27in FHD Monitor                        7550  1125974.93   52558  1132424.50   \n",
       "34in Ultrawide Monitor                  6199  2348718.19   43304  2355558.01   \n",
       "AA Batteries (4-pack)                  27635    79015.68  145558   106118.40   \n",
       "AAA Batteries (4-pack)                 31017    61716.59  146370    92740.83   \n",
       "Apple Airpods Headphones               15661  2332350.00  109477  2349150.00   \n",
       "Bose SoundSport Headphones             13457  1332366.75   94113  1345565.43   \n",
       "Flatscreen TV                           4819  1440000.00   34224  1445700.00   \n",
       "Google Phone                            5532  3315000.00   38305  3319200.00   \n",
       "LG Dryer                                 646   387600.00    4383   387600.00   \n",
       "LG Washing Machine                       666   399600.00    4523   399600.00   \n",
       "Lightning Charging Cable               23217   323787.10  153092   347094.15   \n",
       "Macbook Pro Laptop                      4728  8030800.00   33548  8037600.00   \n",
       "ThinkPad Laptop                         4130  4127958.72   28950  4129958.70   \n",
       "USB-C Charging Cable                   23975   261740.85  154819   286501.25   \n",
       "Vareebadd Phone                         2068   826000.00   14309   827200.00   \n",
       "Wired Headphones                       20557   226395.18  133397   246478.43   \n",
       "iPhone                                  6849  4789400.00   47941  4794300.00   \n",
       "\n",
       "                              Hour  Minute  Count  \n",
       "Product                                            \n",
       "20in Monitor                 58764  122252   4101  \n",
       "27in 4K Gaming Monitor       90916  184331   6230  \n",
       "27in FHD Monitor            107540  219948   7507  \n",
       "34in Ultrawide Monitor       89076  183480   6181  \n",
       "AA Batteries (4-pack)       298342  609039  20577  \n",
       "AAA Batteries (4-pack)      297332  612113  20641  \n",
       "Apple Airpods Headphones    223304  455570  15549  \n",
       "Bose SoundSport Headphones  192445  392603  13325  \n",
       "Flatscreen TV                68815  142789   4800  \n",
       "Google Phone                 79479  162773   5525  \n",
       "LG Dryer                      9326   19043    646  \n",
       "LG Washing Machine            9785   19462    666  \n",
       "Lightning Charging Cable    312529  634442  21658  \n",
       "Macbook Pro Laptop           68261  137574   4724  \n",
       "ThinkPad Laptop              59746  121508   4128  \n",
       "USB-C Charging Cable        314645  647586  21903  \n",
       "Vareebadd Phone              29472   61835   2065  \n",
       "Wired Headphones            271720  554023  18882  \n",
       "iPhone                       98657  201688   6842  "
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "que = all_data.groupby('Product').sum()\n",
    "que"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### making a quantity sell diagram"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "product_group = all_data.groupby('Product')\n",
    "quantity_ordered = product_group.sum()['Quantity Ordered']\n",
    "\n",
    "products =[product for product, df in product_group]\n",
    "plt.ylabel('Quantity Ordered')\n",
    "plt.xlabel('Product name')\n",
    "plt.bar(products, quantity_ordered)\n",
    "plt.xticks(products, rotation = 'vertical', size = 8)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### price of each product"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Product\n",
      "20in Monitor                   109.99\n",
      "27in 4K Gaming Monitor         389.99\n",
      "27in FHD Monitor               149.99\n",
      "34in Ultrawide Monitor         379.99\n",
      "AA Batteries (4-pack)            3.84\n",
      "AAA Batteries (4-pack)           2.99\n",
      "Apple Airpods Headphones       150.00\n",
      "Bose SoundSport Headphones      99.99\n",
      "Flatscreen TV                  300.00\n",
      "Google Phone                   600.00\n",
      "LG Dryer                       600.00\n",
      "LG Washing Machine             600.00\n",
      "Lightning Charging Cable        14.95\n",
      "Macbook Pro Laptop            1700.00\n",
      "ThinkPad Laptop                999.99\n",
      "USB-C Charging Cable            11.95\n",
      "Vareebadd Phone                400.00\n",
      "Wired Headphones                11.99\n",
      "iPhone                         700.00\n",
      "Name: Price Each, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "prices = all_data.groupby('Product').mean()['Price Each']\n",
    "print(prices)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### adding second y axis in matplotlib"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Price ($)')"
      ]
     },
     "execution_count": 68,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax1 = plt.subplots()\n",
    "ax2 = ax1.twinx()\n",
    "ax1.bar(products, quantity_ordered, color = 'g')\n",
    "ax2.plot(products, prices, 'b-')\n",
    "ax1.set_xticklabels(products, rotation = 'vertical', size = 8)\n",
    "ax1.set_xlabel('Product Name')\n",
    "ax1.set_ylabel('Quantity_Ordered', color = 'g')\n",
    "ax2.set_ylabel('Price ($)', color = 'b')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
